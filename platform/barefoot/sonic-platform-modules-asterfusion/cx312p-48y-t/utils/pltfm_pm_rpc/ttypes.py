#
# Autogenerated by Thrift Compiler (0.14.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TFrozenDict, TException, TApplicationException
from thrift.protocol.TProtocol import TProtocolException
from thrift.TRecursive import fix_spec

import sys

from thrift.transport import TTransport
all_structs = []


class pltfm_pm_board_type_t(object):
    BF_PLTFM_BD_ID_MAVERICKS_P0A = 564
    BF_PLTFM_BD_ID_MAVERICKS_P0B = 4660
    BF_PLTFM_BD_ID_MONTARA_P0A = 8756
    BF_PLTFM_BD_ID_MONTARA_P0B = 12852
    BF_PLTFM_BD_ID_MAVERICKS_P0B_EMU = 16948
    BF_PLTFM_BD_ID_MAVERICKS_P0C = 21044
    BF_PLTFM_BD_ID_MONTARA_P0C = 25140
    BF_PLTFM_BD_ID_NEWPORT_P0A = 4404
    BF_PLTFM_BD_ID_NEWPORT_P0B = 8500
    BF_PLTFM_BD_ID_X308PT_V1DOT0 = 12416
    BF_PLTFM_BD_ID_X308PT_V1DOT1 = 12417
    BF_PLTFM_BD_ID_X308PT_V2DOT0 = 12417
    BF_PLTFM_BD_ID_X308PT_V3DOT0 = 12419
    BF_PLTFM_BD_ID_X312PT_V1DOT0 = 12576
    BF_PLTFM_BD_ID_X312PT_V1DOT1 = 12576
    BF_PLTFM_BD_ID_X312PT_V1DOT2 = 12578
    BF_PLTFM_BD_ID_X312PT_V1DOT3 = 12579
    BF_PLTFM_BD_ID_X312PT_V2DOT0 = 12578
    BF_PLTFM_BD_ID_X312PT_V3DOT0 = 12579
    BF_PLTFM_BD_ID_X312PT_V4DOT0 = 12580
    BF_PLTFM_BD_ID_X312PT_V5DOT0 = 12581
    BF_PLTFM_BD_ID_X532PT_V1DOT0 = 21280
    BF_PLTFM_BD_ID_X532PT_V1DOT1 = 21281
    BF_PLTFM_BD_ID_X532PT_V2DOT0 = 21283
    BF_PLTFM_BD_ID_X564PT_V1DOT0 = 22080
    BF_PLTFM_BD_ID_X564PT_V1DOT1 = 22081
    BF_PLTFM_BD_ID_X564PT_V1DOT2 = 22082
    BF_PLTFM_BD_ID_X564PT_V2DOT0 = 22083
    BF_PLTFM_BD_ID_HC36Y24C_V1DOT0 = 9216
    BF_PLTFM_BD_ID_HC36Y24C_V1DOT1 = 9217
    BF_PLTFM_BD_ID_UNKNOWN = 0
    XFFFF = 1

    _VALUES_TO_NAMES = {
        564: "BF_PLTFM_BD_ID_MAVERICKS_P0A",
        4660: "BF_PLTFM_BD_ID_MAVERICKS_P0B",
        8756: "BF_PLTFM_BD_ID_MONTARA_P0A",
        12852: "BF_PLTFM_BD_ID_MONTARA_P0B",
        16948: "BF_PLTFM_BD_ID_MAVERICKS_P0B_EMU",
        21044: "BF_PLTFM_BD_ID_MAVERICKS_P0C",
        25140: "BF_PLTFM_BD_ID_MONTARA_P0C",
        4404: "BF_PLTFM_BD_ID_NEWPORT_P0A",
        8500: "BF_PLTFM_BD_ID_NEWPORT_P0B",
        12416: "BF_PLTFM_BD_ID_X308PT_V1DOT0",
        12417: "BF_PLTFM_BD_ID_X308PT_V1DOT1",
        12417: "BF_PLTFM_BD_ID_X308PT_V2DOT0",
        12419: "BF_PLTFM_BD_ID_X308PT_V3DOT0",
        12576: "BF_PLTFM_BD_ID_X312PT_V1DOT0",
        12576: "BF_PLTFM_BD_ID_X312PT_V1DOT1",
        12578: "BF_PLTFM_BD_ID_X312PT_V1DOT2",
        12579: "BF_PLTFM_BD_ID_X312PT_V1DOT3",
        12578: "BF_PLTFM_BD_ID_X312PT_V2DOT0",
        12579: "BF_PLTFM_BD_ID_X312PT_V3DOT0",
        12580: "BF_PLTFM_BD_ID_X312PT_V4DOT0",
        12581: "BF_PLTFM_BD_ID_X312PT_V5DOT0",
        21280: "BF_PLTFM_BD_ID_X532PT_V1DOT0",
        21281: "BF_PLTFM_BD_ID_X532PT_V1DOT1",
        21283: "BF_PLTFM_BD_ID_X532PT_V2DOT0",
        22080: "BF_PLTFM_BD_ID_X564PT_V1DOT0",
        22081: "BF_PLTFM_BD_ID_X564PT_V1DOT1",
        22082: "BF_PLTFM_BD_ID_X564PT_V1DOT2",
        22083: "BF_PLTFM_BD_ID_X564PT_V2DOT0",
        9216: "BF_PLTFM_BD_ID_HC36Y24C_V1DOT0",
        9217: "BF_PLTFM_BD_ID_HC36Y24C_V1DOT1",
        0: "BF_PLTFM_BD_ID_UNKNOWN",
        1: "XFFFF",
    }

    _NAMES_TO_VALUES = {
        "BF_PLTFM_BD_ID_MAVERICKS_P0A": 564,
        "BF_PLTFM_BD_ID_MAVERICKS_P0B": 4660,
        "BF_PLTFM_BD_ID_MONTARA_P0A": 8756,
        "BF_PLTFM_BD_ID_MONTARA_P0B": 12852,
        "BF_PLTFM_BD_ID_MAVERICKS_P0B_EMU": 16948,
        "BF_PLTFM_BD_ID_MAVERICKS_P0C": 21044,
        "BF_PLTFM_BD_ID_MONTARA_P0C": 25140,
        "BF_PLTFM_BD_ID_NEWPORT_P0A": 4404,
        "BF_PLTFM_BD_ID_NEWPORT_P0B": 8500,
        "BF_PLTFM_BD_ID_X308PT_V1DOT0": 12416,
        "BF_PLTFM_BD_ID_X308PT_V1DOT1": 12417,
        "BF_PLTFM_BD_ID_X308PT_V2DOT0": 12417,
        "BF_PLTFM_BD_ID_X308PT_V3DOT0": 12419,
        "BF_PLTFM_BD_ID_X312PT_V1DOT0": 12576,
        "BF_PLTFM_BD_ID_X312PT_V1DOT1": 12576,
        "BF_PLTFM_BD_ID_X312PT_V1DOT2": 12578,
        "BF_PLTFM_BD_ID_X312PT_V1DOT3": 12579,
        "BF_PLTFM_BD_ID_X312PT_V2DOT0": 12578,
        "BF_PLTFM_BD_ID_X312PT_V3DOT0": 12579,
        "BF_PLTFM_BD_ID_X312PT_V4DOT0": 12580,
        "BF_PLTFM_BD_ID_X312PT_V5DOT0": 12581,
        "BF_PLTFM_BD_ID_X532PT_V1DOT0": 21280,
        "BF_PLTFM_BD_ID_X532PT_V1DOT1": 21281,
        "BF_PLTFM_BD_ID_X532PT_V2DOT0": 21283,
        "BF_PLTFM_BD_ID_X564PT_V1DOT0": 22080,
        "BF_PLTFM_BD_ID_X564PT_V1DOT1": 22081,
        "BF_PLTFM_BD_ID_X564PT_V1DOT2": 22082,
        "BF_PLTFM_BD_ID_X564PT_V2DOT0": 22083,
        "BF_PLTFM_BD_ID_HC36Y24C_V1DOT0": 9216,
        "BF_PLTFM_BD_ID_HC36Y24C_V1DOT1": 9217,
        "BF_PLTFM_BD_ID_UNKNOWN": 0,
        "XFFFF": 1,
    }


class InvalidPltfmPmOperation(TException):
    """
    Attributes:
     - code

    """


    def __init__(self, code=None,):
        super(InvalidPltfmPmOperation, self).__setattr__('code', code)

    def __setattr__(self, *args):
        raise TypeError("can't modify immutable instance")

    def __delattr__(self, *args):
        raise TypeError("can't modify immutable instance")

    def __hash__(self):
        return hash(self.__class__) ^ hash((self.code, ))

    @classmethod
    def read(cls, iprot):
        if iprot._fast_decode is not None and isinstance(iprot.trans, TTransport.CReadableTransport) and cls.thrift_spec is not None:
            return iprot._fast_decode(None, iprot, [cls, cls.thrift_spec])
        iprot.readStructBegin()
        code = None
        while True:
            (fname, ftype, fid) = iprot.readFieldBegin()
            if ftype == TType.STOP:
                break
            if fid == 1:
                if ftype == TType.I32:
                    code = iprot.readI32()
                else:
                    iprot.skip(ftype)
            else:
                iprot.skip(ftype)
            iprot.readFieldEnd()
        iprot.readStructEnd()
        return cls(
            code=code,
        )

    def write(self, oprot):
        if oprot._fast_encode is not None and self.thrift_spec is not None:
            oprot.trans.write(oprot._fast_encode(self, [self.__class__, self.thrift_spec]))
            return
        oprot.writeStructBegin('InvalidPltfmPmOperation')
        if self.code is not None:
            oprot.writeFieldBegin('code', TType.I32, 1)
            oprot.writeI32(self.code)
            oprot.writeFieldEnd()
        oprot.writeFieldStop()
        oprot.writeStructEnd()

    def validate(self):
        return

    def __str__(self):
        return repr(self)

    def __repr__(self):
        L = ['%s=%r' % (key, value)
             for key, value in self.__dict__.items()]
        return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

    def __eq__(self, other):
        return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not (self == other)
all_structs.append(InvalidPltfmPmOperation)
InvalidPltfmPmOperation.thrift_spec = (
    None,  # 0
    (1, TType.I32, 'code', None, None, ),  # 1
)
fix_spec(all_structs)
del all_structs
